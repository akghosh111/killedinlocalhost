// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url               = env("DATABASE_URL")
  directUrl      = env("DIRECT_DATABASE_URL")  //  Raw Neon URL for schema sync
}


model User {
  id       String     @id @default(uuid())
  email    String     @unique
  name     String?
  password String
  projects Project[]  @relation("UserProjects")
  comments Comment[]  @relation("UserComments")
}

model Project {
  id          String     @id @default(uuid())
  title       String
  content     String
  published   Boolean    @default(false)
  upvotes     Int        @default(0)
  tags        String[]   // optional: ["web", "ai", "app"]
  abandonedAt DateTime?
  author      User       @relation("UserProjects", fields: [authorId], references: [id])
  authorId    String
  comments    Comment[]
  createdAt   DateTime   @default(now())
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  author    User     @relation("UserComments", fields: [authorId], references: [id])
  authorId  String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  createdAt DateTime @default(now())
}
